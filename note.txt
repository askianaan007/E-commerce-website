 npm i nodemon multer mongoose jsonwebtoken express-formidable express-async-handler express dotenv cors cookie-parser concurrently bcryptjs

 npm i slick-carousel react-slick react-toastify react-router react-router-dom react-redux react-icons apexcharts react-apexcharts moment flowbite axios @paypal/react-paypal-js @reduxjs/toolkit

   "type": "module",

   "scripts": {
    "backend": "nodemon backend/index.js",
    "frontend": "npm run dev --prefix frontend",
    "dev": "concurrently \"npm run frontend\"  \"npm run backend\""
   }

in backend 6 folders and index.js


index.js beggining 


//packages
import express from "express";
import path from "path";
import dotenv from "dotenv";
import cookieParser from "cookie-parser";

//utils
import connectDB from "./config/db.js";

dotenv.config();
const port = process.env.PORT || 6000;

connectDB();

const app = express();

app.use(express.json());
app.use(express.urlencoded({ extended: true }));
app.use(cookieParser());

app.get("/", (req, res) => {
  res.send("hello world");
});

app.listen(port, () => console.log(`server running on the port: ${port}`));


//tailwind
npm install -D tailwindcss postcss autoprefixer
npx tailwindcss init -p

/** @type {import('tailwindcss').Config} */
export default {
  content: [
    "./index.html",
    "./src/**/*.{js,ts,jsx,tsx}",
  ],
  theme: {
    extend: {},
  },
  plugins: [],
}

@tailwind base;
@tailwind components;
@tailwind utilities;



---------basics---------

// Callback

const f1 = (val, cal) => {
  return cal(val + 10);
};

const cal = (val) => {
  return val + 20;
};

console.log(f1(1, cal));


//Promise

const p1 = (val) =>
  new Promise((resolve, reject) => {
    setTimeout(() => {
      resolve(val + 10);
    }, 1000);
  });

p1(1)
  .then((x) => x + 20)
  .then(console.log);
  
